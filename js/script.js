// Generated by CoffeeScript 1.6.2
(function($, win, doc) {
  var $doc, $win;

  $win = $(win);
  $doc = $(doc);
  return $(function() {
    var currentTODO, timestamp;

    $(".todoList").sortable({
      axis: "y",
      containment: "#main",
      update: function() {
        var arr;

        arr = $(".todoList").sortable("toArray");
        arr = $.map(arr, function(val, key) {
          return val.replace("todo-", "");
        });
        return setTimeout(function() {
          return $.get("ajax.php", {
            action: "rearrange",
            positions: arr
          }, 11);
        });
      },
      stop: function(e, ui) {
        return ui.item.css({
          top: "0",
          left: "0"
        });
      }
    });
    currentTODO = void 0;
    $("#dialog-confirm").dialog({
      resizable: false,
      height: 130,
      modal: true,
      autoOpen: false,
      buttons: {
        "Delete item": function() {
          $.get("ajax.php", {
            action: "delete",
            id: currentTODO.data("id")
          }, function(msg) {
            return currentTODO.fadeOut("fast");
          });
          return $(this).dialog("close");
        },
        Cancel: function() {
          return $(this).dialog("close");
        }
      }
    });
    $(".todo").on("dblclick", function() {
      return $(this).find("a.edit").click();
    });
    $(".todo a").on("click", function(e) {
      currentTODO = $(this).closest(".todo");
      currentTODO.data("id", currentTODO.attr("id").replace("todo-", ""));
      return e.preventDefault();
    });
    $(".todo a.delete").on("click", function() {
      return $("#dialog-confirm").dialog("open");
    });
    $(".todo a.edit").on("click", function() {
      var containerMisc, containerText;

      containerText = currentTODO.find(".text");
      containerMisc = currentTODO.find(".misc");
      if (!currentTODO.data("origText") || !currentTODO.data("origMisc")) {
        currentTODO.data("origText", containerText.text());
        currentTODO.data("origMisc", containerMisc.text());
      } else {
        return false;
      }
      $("<input type='text' class='iText'>").val(containerText.text()).appendTo(containerText.empty());
      $("<input type='text' class='iMisc'>").val(containerMisc.text()).appendTo(containerMisc.empty());
      return containerMisc.append("<div class='editTodo'>\n<a class='saveChanges' href='#'>Save</a> or\n<a class='discardChanges' href='#'>Cancel</a>\n</div>");
    });
    $doc.on("click", "a.discardChanges", function() {
      currentTODO.find(".text").text(currentTODO.data("origText"));
      currentTODO.find(".misc").text(currentTODO.data("origMisc"));
      currentTODO.removeData("origText origMisc");
      return false;
    });
    $doc.on("click", "a.saveChanges", function() {
      var misc, text;

      text = currentTODO.find("input[class=iText]").val();
      misc = currentTODO.find("input[class=iMisc]").val();
      false;
      setTimeout(function() {
        return $.get("ajax.php", {
          action: "edit",
          id: currentTODO.data("id"),
          text: text,
          misc: misc
        }, 11);
      });
      currentTODO.find(".text").text(text);
      currentTODO.find(".misc").text(misc);
      return currentTODO.removeData("origText origMisc");
    });
    timestamp = 0;
    return $("#addButton").click(function(e) {
      if ((new Date()).getTime() - timestamp < 1000) {
        return false;
      }
      $.get("ajax.php", {
        action: "new",
        text: "リストを追加（Doubleclick to Edit.）",
        misc: "calを追加",
        rand: Math.random()
      }, function(msg) {
        return $(msg).hide().appendTo(".todoList").fadeIn();
      });
      timestamp = (new Date()).getTime();
      return e.preventDefault();
    });
  });
})(jQuery, this, this.document);
